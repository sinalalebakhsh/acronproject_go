# acronproject_go

First Teacher is Nana Janashia. from YouTub: TechWorld with Nana



tag 0.0.2:
- simple sample Web Application

tag 0.0.35:
- Get user input

tag 0.0.37:
- Array and Options that


tag 0.0.41:
- Add Packages = helper

tag 0.0.42:
- Learn how build Program for another OS(Operation System):
    For mac:
        GOOS="darwin" go build
    For windows:
        GOOS="windows" go build

tag 0.0.43:
- Delete mac & Windows 


___________________________________________________________________________________
Make Code cleaner with
package level variables
Defined at the top outside all functions
They can be accesses inside any of the functions
And in all files, which are in the same package
Belike Python language is global variable
Local Variables:
> Difined inside a function or a block
> They can be accessed only inside that function or block of code
___________________________________________________________________________________
More Use Cases of functions
Another important purpose which is that, same block of code can be reused in many different places in your Application
by calling the function name just like variables where we define something once and reuse it hundred times so far example
if you were hosting 10 conferences at the same time and needed to ask for and validate user input you can reuse that code
for all 10 conferences instead of writing that same login 10 times.
___________________________________________________________________________________
Packages in Go:
Until now we worked only with 1 file.
What if I'm writing a more complex Go application with a lot of logic?
For run this To file:
go run main.go helper.go
Or write:
go run .
___________________________________________________________________________________
You can export: variables, functions, constant, types
___________________________________________________________________________________
Scope Rules (Variable Scopes) in Go

Variable Scope Definetion:
    Scope is the region of a program, where a defined variable can be accessed


3 Levels of Scope:
    Local:
        1-Declaration within function (Or assertion Or statement):
            Can be used only within that function
        2- Declaration within block
            Can be used only within that block
    Package:
        1- Declaration outside all functions:
            Can be used everywhere in the same package
    Global:
        1-Declaration outside all functions & uppercase first letter:
            Can be used everywhere across all package

Revert "helper" package in tag 0.0.43  (Revert like = return, reflux, reversal, regression, relapse, turnover  )

___________________________________________________________________________________
Maps
    > Maps unique keys to values
    > You can retrieve the value by using its key later
    > All keys have the same data type 
    > All values have the same data type
    Example, Slice Like List PYTHON:
    var my_slice []string
    Example, Map Like Dictionary PYTHON:
    var my_map map[string]string
    Or
    var my_map = make(map[string]string)

Definetion:
    > my_map["Keys"] = Values
    > my_map["Keys1"] = Values2
    > my_map["Keys3"] = Values3

    For adding another type, We need to convert that to default Keys and Values Type










